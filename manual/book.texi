\input texinfo
@setfilename book.texinfo
@documentencoding UTF-8
@settitle History and Future of Graph Based Systems (DRAFT!)
@copying
Text copyright @copyright{} 2016 Timothy Hobbs. Image copyrights are noted in their respective captions.

The text of this document is released under the Creative Commons Attribution-ShareAlike 4.0 International (CC BY-SA 4.0).

For more information see @url{https://creativecommons.org/licenses/by-sa/4.0/}
@end copying

@titlepage
@title History and Future of Graph Based Systems (DRAFT!)
@subtitle An extended user manual for the textgraph system
@subtitle for textgraph git master late 2016.
@author Timothy Hobbs <@url{http://timothy.hobbs.cz}>

@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage
@contents
@ifnottex
@node Top
@top textgraph manual
This is the extended textgraph user manual.
@menu
* Prologue::
* Chapter 1::
* 1.1::
* 1.2::
* 1.3::
* 1.4::
* 1.5::
* 1.6::
* Chapter 2::
* Chapter 3::
* Chapter 4::
* Chapter 5::
* Chapter 6::
@end menu
@end ifnottex
@quotation
Software is invisible and unvisualizable. Geometric abstractions are powerful tools. The floor plan of a building helps both architect and client evaluate spaces, traffic flows, views. Contradictions and omissions become obvious. Scale drawings of mechanical parts and stick-figure models of molecules, although abstractions, serve the same purpose. A geometric reality is captured in a geometric abstraction.

The reality of software is not inherently embedded in space. Hence, it has no ready geometric representation in the way that land has maps, silicon chips have diagrams, computers have connectivity schematics. As soon as we attempt to diagram software structure, we find it to constitute not one, but several, general directed graphs superimposed one upon another. The several graphs may represent the flow of control, the flow of data, patterns of dependency, time sequence, name-space relationships. These graphs are usually not even planar, much less hierarchical. Indeed, one of the ways of establishing conceptual control over such structure is to enforce link cutting until one or more of the graphs becomes hierarchical.

In spite of progress in restricting and simplifying the structures of software, they remain inherently unvisualizable, and thus do not permit the mind to use some of its most powerful conceptual tools. This lack not only impedes the process of design within one mind, it severely hinders communication among minds.

--- Frederick P. Brooks, Jr. No Silver Bullet: Essence and Accidents of Software Engineering
@end quotation
@unnumbered Notes
This is an interdisciplinary work with a single author and I am not an expert on most disciplines here-in represented. Please send corrections to <timothy@@hobbs.cz>.

@node Prologue
@unnumbered Prologue
I wanted to write a manual for the textgraph ecosystem. I thought it would be rather short. The file format is trivial and the utilities are only a few lines of code. But despite the simplicity of it all, I felt like I was describing the use of a hammer to an audience which had never seen a nail. In person, I would tell people about how the myopic graph editor lets you effectively edit and manipulate graph data and they would look at me quizzically and ask themselves "Why would I want to manipulate graph based data?" Or worse, "what is a graph?" Thus I find myself writing, not a manual, but a traveler's guide to the world of graphs.

@float Figure,graph
@image{./images/graph,,200pt,A simple graph,png}
@caption{A graph (Copyright @copyright{} 2016 Timothy Hobbs, CC BY-SA 4.0)}
@end float
@cindex graph
@cindex vertex
@cindex edge
A graph is illustrated in @ref{graph}. When I use the word @emph{graph}, I am not referring to bar charts. In mathematics, @emph{graphs} are a kind of network. A graph is a collection of @emph{vertexes} which are connected by @emph{edges}. You can think of @emph{vertexes} as train stations and @emph{edges} as rail lines. A vertex can be anything and an edge is just a connection between one vertex and another.

This is a book about graphs. I will discuss the myriad of ways that they can be, and have been, used to represent data, calculations, and systems. I will also discuss basic philosophical questions, such as "what is @emph{data}", "what is a @emph{calculation}" and "what is a @emph{system}?" Finally, I will discuss ways of manipulating digital representations of graphs using the textgraph ecosystem and I will present concrete examples of how you can use digital representations of graphs to enhance your understanding of the programs you write and improve automation and code reuse.

@node Chapter 1,1.1,Prologue,Top
@chapter Natural Graph-like Structures
As the title of this manual suggests, I will start by presenting a history of graphs and graph based systems. 
There are three types of existence each with their own relationship to history. Abstract mathematical concepts exist without any relationship to time. The mathematical laws which govern graphs have always been and always will be. Physical graph-like structures came into existence some time after the big bang and we can discuss when they started appearing. Human formed theories about graphs, digital representations of graphs, and other "discoveries" are even simpler for the historian, because we often know exactly when these concepts were first published or used. I'll start with physical structures.

@float Figure, slime-mold
@image{./images/slime-mold,,180pt,Slime mold,png}
@caption{Slime mold, a physical graph-like structure (Copyright @copyright{} 2011 @url{https://www.flickr.com/photos/mjambon/6271724816,Martin Jambon CC-By 2.0})}
@end float

@node 1.1,1.2,Chapter 1,Top
@section Non-biological Graph-like Structures

Interesting, natural non-biological, graph-like structures on the macro scale are rather rare. Matter tends to form clumps rather than strands and when strands do form they rarely connect. However, one of the most common uses of graphs in computer science is the representation of molecular structures.

@float Figure,Caffeine_Molecule
@image{./images/Caffeine_Molecule,,100pt,Caffeine Molecule,png}
@caption{Caffeine Molecule (Copyright @copyright{} 2005 @url{https://commons.wikimedia.org/wiki/File:Caffeine_Molecule.png,Michael Str√∂ck CC-By-SA 3.0})}
@end float

Molecules are indeed graphs, but what looks clearly like @emph{vertexes} (atoms) and @emph{edges} (bonds) on paper is, in reality, a blob of amorphous electroniness with some nuclei stuck in the middle.

Looking to space as a model for non-biological physics, I see Mars covered with dust (not graph-like), rock (not graph-like), gases (not graph-like), lava (sometimes graph-like). There is so little graphiness on Mars, that it is hard to find anything that even looks like a tree (in the mathematical sense).

@float Figure, mars
@image{./images/mars,,200pt,Mars is devoid of graph-like structures,jpg}
@caption{Mars is devoid of graph-like structures. (Copyright @copyright{} 2014 @url{https://commons.wikimedia.org/wiki/File:PIA17944-MarsCuriosityRover-AfterCrossingDingoGapSanddune-20140209.jpg,NASA/JPL-Caltech/MSSS Public Domain})}
@end float

However, these structures do exist. As I said earlier, matter likes to form clumps.

@float Figure,mud
@image{./images/mud,,140pt,Mud,jpg}
@caption{The negative space around these clumps of mud form an @url{https://en.wikipedia.org/wiki/Torus#n-dimensional_torus, n-toroid}, and the whole picture looks pretty graph-like (Copyright @copyright{} 2007 @url{https://en.wikipedia.org/wiki/Mudcrack#/media/File:Desiccation-cracks_hg.jpg,Hannes Grobe CC-By-SA 2.5})}
@end float

When you poor liquid around a bunch of clumps, the clumps become islands, which force the liquid to flow around them.

@float Figure,LempisaariNaantaliFinland
@image{./images/LempisaariNaantaliFinland,,200pt,An archipelago in Finland,jpg}
@caption{When water flows around an archipelago an n-toroid of water is formed. (Copyright @copyright{} 2006 @url{https://commons.wikimedia.org/wiki/File:Lempisaari%2C_Naantali%2C_Finland..jpg, Paul Lenz CC-By-SA 3.0})}
@end float

@cindex graph-like

The liquid in question is now @emph{graph-like}. It is an @url{https://en.wikipedia.org/wiki/Torus#n-dimensional_torus, n-toroid}. Saying something is an n-toroid is a fancy way of saying that it has holes in it. But when I look at the water in @ref{LempisaariNaantaliFinland}, my brain does not immediately say "look! The water has holes in it!" My brain, rather, starts dissecting the water into @emph{channels}, and @emph{intersections between channels}. And when I really look at the picture cross eyed, I can even imagine that these intersections are @emph{vertices} and the channels are @emph{edges} of a graph. This is not quite true. An n-toroid is not a graph. The vertices and the edges are not distinct enough to really be a graph. But it's pretty graph-like.

@cindex torus
@cindex toroid
@cindex n-torus
@cindex n-toroid

Just to make sure that everyone is up to speed, these are toroids:

@float Figure,torus
@w{@image{./images/torus,,100pt,A 1-toroid,png} @image{./images/two-torus,,100pt,A 2-toroid,png}}
@caption{A 1-toroid and 2-toroid side by side. (Copyright @copyright{} 2007 @url{https://en.wikipedia.org/wiki/Genus_(mathematics)#/media/File:Torus_illustration.png, Oleg Alexandrov Public Domain})}
@end float

A toroid really is any shape with a hole in it. A 1-toroid is any shape with one hole, a 2-toroid is any shape with two holes and an n-toroid is any shape with any number of holes.

This copper ore is pretty graph-like too. It is formed by a liquid (molten copper) flowing around clumps of something else and then hardening. It is not a graph but it is an n-toroid and that's graph-like.

@float Figure, copper 
@image{./images/copper,,200pt,Native Copper,jpg}
@caption{Native copper ore (Copyright @copyright{} 2009 @url{https://en.wikipedia.org/wiki/Copper#/media/File:NatCopper.jpg, Jonathan Zander CC-By-SA 3.0})}
@end float

@node 1.2,1.3,1.1,Top
@section Non-biological tree-like structures
@cindex tree
@cindex tree-like
@cindex loop

Tree-like structures are also interesting. In mathematics, trees are just a special kind of graph which doesn't have any loops.

@float Figure, tree
@image{./images/tree,,180pt,This is a tree.,png}
@caption{This is a @emph{tree}. (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz,Timothy Hobbs CC BY-SA 4.0})}
@end float

@float Figure, loop
@image{./images/loop,,100pt,A loop,png}
@caption{This is a loop. (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz/,Timothy Hobbs CC BY-SA 4.0})}
@end float

Since the tree-like-ness of a structure is not dependent on the existence of holes, we cannot determine if something is tree-like simply by asking if it is toroidal. I will not present a precise mathematical definition of what is tree-like, but you can certainly agree that a form which has narrowish appendages which branch is tree-like and is a lot more interesting than something that is merely bloby.

@float Figure,tree-like-vs-blobiness
@image{./images/tree-like-vs-blobiness,,150pt,Tree-like structures are not merely bloby,png}
@caption{Tree-like structures are more interesting than bloby ones (Copyright @copyright{} 2016 Timothy Hobbs CC-By-SA 4.0)}
@end float

The copper ore in @ref{copper} is not merely a 5-torroid. It also has a lot of weird knobs sticking out of it. These knoby things are interesting too, they jut out at odd angles and seem to be globbed together in an odd pattern. One could almost say they're tree-like, though that is probably a strech. Anyway, an n-toroid with tree-like appendages is certainly more interesting than an n-toroid without them.

@float Figure,tree-like-toroid
@image{./images/tree-like-toroid-vs-toroid,,150pt,A tree-like toroid is more interesting than a simple toroid,png}
@caption{A toroid with tree-like appendages is more interesting than a toroid without (Copyright @copyright{} 2016 Timothy Hobbs CC-By-SA 4.0)}
@end float

@emph{Exercise:} Come up with a precise method for determining which shapes are a) totally boring b) bloby and c) have tree-like appendages. 

@float Figure, rivers
@image{./images/rivers,,200pt,The Mitchell River delta,jpg}
@caption{Rivers are undeniably tree-like (Copyright @copyright{} 2010 @url{https://www.flickr.com/photos/feralarts/4399957022/in/photostream/, Feral Arts CC-By 2.0})}
@end float

@float Figure,asteroid
@image{./images/asteroid,,230pt,Asteroids are bloby.,jpg}
@caption{Asteroids are undeniably bloby. (Copyright @copyright{} 1993 @url{http://photojournal.jpl.nasa.gov/catalog/?IDNumber=PIA00069,NASA/JPL Public Domain})}
@end float

Tree-like structures and graph-like structures are intimately related. One of the main ways that graph-like toroidal structures are formed is when two tree-like structures are joined together. For example, the copper ore in @ref{copper} was a tree-like mess of molten copper before it flowed around whatever it was flowing around to become toroidal and graph-like. The corollary to this is when graph-like toroidal structures are cut up. What were once loops become appendages, so tree-like structures can be formed when toroidal ones are damaged.

@node 1.3,1.4,1.2,Top
@section Formation Processes of Non-Biological Graph-like and Tree-like Structures
@cindex gas expansion
@cindex ablation
@cindex growth

In the beginning of this chapter I presented the flow of a liquid around clumps as being the main formation process for graph-like toroidal structures. I would like to present three more formation processes; @emph{gas expansion}, @emph{ablation} and @emph{growth}. @emph{Gas expansion} is when bubbles of gas form in a viscous liquid,  @emph{ablation} is when material is removed to create a toroidal or tree-like structure and @emph{growth} is a term that you already know.

@page
@subsection Gas expansion
Think of rising bread.

@float Figure,scoria
@image{./images/scoria,,250pt,Scoria,jpg}
@caption{Scoria, a type of porous rock formed by expanding bubbles of gas (Copyright @copyright{} 2008 @url{https://en.wikipedia.org/wiki/Scoria#/media/File:Scoria_Macro_Digon3.jpg, Jonathan Zander CC-By-SA 3.0})}
@end float

The Scoria in @ref{scoria} is not actually as graph-like as it might seem at first glance. It does have hollow bits, but it isn't particularly toroidal. As I said earlier, toroids have holes in them and these rocks tend to be water proof, not very holy. One type of porous rock, pumice, even floats on water because there is so much air trapped inside! When you think of the physical properties of expanding gas, it is clear why these rocks are rarely particularly toroidal. Gas expands, making bubbles. Those bubbles may then pop. But a popped bubble leaves a crater, not a hole going all the way through a material. Once a bubble has popped, there is no force of expanding gas which would cause another opening to appear on the other side of the crater. Thus, no real graphiness.

However, in concert with @emph{ablation}, porous rocks may become toroidal. After-all, the bubble walls are very thin and may be worn away quite easily.

@float Figure, lava-rock-ablated
@image{./images/lava-rock-ablated,,250pt,A graph-like porous rock, the thin walls of which have become ablated.,jpg}
@caption{A graph-like porous rock, the thin walls of which have become ablated. (Copyright @copyright{} 2015 @url{https://pixabay.com/en/stone-volcanic-rock-905093/,Ruben Rubio CC0 Public Domain})}
@end float

In rare cases, the popping of the bubbles is the direct cause of the graphiness and no ablation is needed.

@float Figure, reticulite
@image{./images/reticulite,,200pt,Reticulite, a form of volcanic pumice, the bubbles of which have no walls.,jpg}
@caption{Reticulite is a form of volcanic pumice, the bubbles of which have no walls. (Copyright @copyright{} @url{http://hvo.wr.usgs.gov/volcanowatch/archive/2007/07_09_06.html,J.D. Griggs and the US Geographic Survey}, Public Domain)}
@end float

@subsection Ablation

@emph{Ablation} is when material is washed, corroded, or blown away. This can leave a graph-like or tree-like structure in the following circumstances:

@enumerate
@item
A harder substance flowed and hardened around a softer substance which is then washed away.
@item
The thin walls of the bubbles in non-graph-like porous rock are destroyed. (And generally, walls of uneven thickness being eroded, corroded, or weathered.)
@item
Uneven application of a corrosive substance.
@item
Wetting and drying cycles which change the hardness of parts of a rock by carrying some elements around.
@item
Complex eddy currents cause graph-like erosion in a material which is otherwise uniform.
@end enumerate

Here are two examples of honeycomb weathering, a complex form of weathering in which calcium is moved within limestone by water, causing it to concentrate in a web like pattern forming a hardened web of rock.

@float Figure,honeycomb
@image{./images/honeycomb,,200pt,Honeycomb weathering,jpg}
@caption{Honeycomb weathering, Black Hand Sandstone, Lower Mississippian; Mt. Pleasant, Lancaster, Ohio, USA (Copyright @copyright{} 2016 @url{https://www.flickr.com/photos/jsjgeology/27783146895, James St. John CC-By 2.0})}
@end float


@float Figure,honeycomb1
@image{./images/honeycomb1,,200pt,Honeycomb weathering,jpg}
@caption{Honeycomb weathering, Watchet, Somerset, Great Britain (Copyright @copyright{} 2010 @url{http://www.geograph.org.uk/photo/1707186, Nigel Chadwick CC-By-SA 2.0})}
@end float

@page
@subsection Growth

Graph like structures can also @emph{grow}. Examples include stalactites, icicles, and crystals.

@float Figure,stalactites
@image{./images/stalactites,,250pt,Stalactites,jpg}
@caption{Stalactites in Damlata≈ü Cave, Alanya, Turkey (Copyright @copyright{} 2007 @url{https://www.flickr.com/photos/48264958@@N00/2041974766/, BillBl CC-By 2.0})}
@end float

@float Figure,ice-crystals
@image{./images/ice-crystals,,200pt,Ice crystals,jpg}
@caption{Ice crystals (Copyright @copyright{} 2009 @url{https://en.wikipedia.org/wiki/Ice_crystals#/media/File:Ice_crystals_on_the_box.jpg,Brocken Inaglory CC-By-SA 3.0})}
@end float

@page
@node 1.4,1.5,1.3,Top
@section Biological Tree-like Structures

With the appearance of multi-celled life, the quantity and diversity of tree-like structures exploded.

@float Figure, Socotra_dragon_tree
@image{./images/Socotra_dragon_tree,,200pt,Socotra dragon tree,jpg}
@caption{Socotra dragon tree, Socotra island, Yemen (Copyright @copyright{} 2008 @url{https://commons.wikimedia.org/wiki/File:Socotra_dragon_tree.JPG,Boris Khvostichenko CC-By-SA 4.0})}
@end float

Indeed, multi-celled life forms tend to have at least several tree-like appendages and it is rare for a life form to be truly bloby. This is completely different from the non-biological world, which is mostly bloby and rarely tree-like.

@float Figure, slug
@image{./images/slug,,200pt,Even bloby life forms like this slug have appendages.,jpg}
@caption{Even bloby life forms like this slug have appendages. (Copyright @copyright{} 2006 @url{https://cs.wikipedia.org/wiki/Soubor:Orange_slug.jpg,Guillaume Brocker CC BY-SA 3.0})}
@end float

@float Figure,rock
@image{./images/rock,,200pt,Rocks, however, almost @emph{never} have appendages.,jpg}
@caption{Rocks, however, almost @emph{never} have appendages. (Copyright @copyright{} 2012 @url{http://reptonix.awardspace.co.uk/photos/2012-02-11.htm,Reptonix free Creative Commons licensed photos CC-By 3.0})}
@end float

There must be something truly special about being tree-like, for life to have evolved to have such an unusual geometry. When I ask myself, "why does life need to be so tree-like?" my first impression is that it is hard to move if you're a blob. However, plants don't move, and they are even more treeish than animals are. Perhaps it is merely a side-effect of some property of growth. Further analysis shows, that the advantages and disadvantages of tree-like structures are diverse and that there are multiple competing factors in the shape of a plant or animal.

Animals tend to be bloby with only the few, relatively short, appendages which they need for locomotion or dexterity.

@float Figure, dexteritylocomotion
@image{./images/dexteritylocomotion,,400pt,Two young mammalian blobs exhibiting the use of their appendages for dexterity and locomotion.,jpg}
@caption{Two young mammamalian blobs exhibiting the use of their appendages for locomotion and dexterity. (Copyright @copyright{} 2015 @url{http://denisa.hobbs.cz,Denisa Hobbs CC BY-SA 4.0})}
@end float


@subsection Disadvantages of Tree-like Structures for Multi-celled Life-forms
@enumerate 

@item Fragility

You will notice that the rock in @ref{rock} is not just bloby, but downright round. It has been polished by tumbling in a stream. If it ever had a narrowish appendage, that appendage is long gone. Indeed, the key reason why rocks are almost exclusively bloby is that graph-like and tree-like structures are fragile!

@float Figure, turtle
@image{./images/turtle,,200pt,An Eastern Box Turtle hiding in its shell to protect its fragile appendages,jpg}
@caption{An Eastern Box Turtle, pretending to be bloby, hiding in its shell to protect its fragile appendages(Copyright @copyright{} 2011 @url{https://www.flickr.com/photos/npsncbn/8579419363,Robin Baranowski@comma{} National Parks Service photo CC BY-SA 2.0})}
@end float

@item Heat loss

The equation for heat loss of an organism is a product of its surface area. The shape with the lowest surface area per volume is a sphere. Anything other than a sphere loses unnecessary heat and appendages have a particularly high surface area to volume ratio.

Note: plants do not generate significant heat with their metabolisms and therefore are not evolutionarily motivated to conserve internally generated heat.

@item Water loss

A very similar equation also applies to water loss. Plants are effected by this too.
@end enumerate

One important thing to understand, is that an analysis of emperical data regarding the heat loss or water-loss of an organism is @b{meaningless} when studying the merits of biological geometry! For example, animals will send less blood to their limbs in order to combat heat loss. Emperically, this means that heat loss from limbs is relatively low in terms of heat loss per surface area. However, this is only an evolutionary adaption to a fundamental disadvantage to having a certain geometric shape. The same applies with water loss.

@subsection Advantages of Tree-like Structures for Multi-celled Life-forms

For animals:
@enumerate
@item Mobility
@item Dexterity
@item Height
@end enumerate

For plants (in order of importance):
@enumerate
@item Dispensability

If an animal bights off a leaf, then a new leaf can be easily grown back. If, in the winter, temperatures are too low for leaf cells to survive, than these leaves can be grown back in the spring.

@item Height

Having a tree-like structure allows plants to be tall cheaply. They do not need to invest much growth volume into growing high above their neighbors and therefor reaching the sun.

@item Quarantinability

If a leaf or branch becomes infected, the plant can quarantine just the infected branch and survive.

@item Mobility

Plants actually move towards the light, albeit slowly. Being long and thin allows them to do this.
@end enumerate

@float Figure, rose
@image{./images/rose,,200pt,A rose branch exhibiting winter dieback.,png}
@caption{A rose branch exhibiting winter dieback. Note that branches 2 and 4 are dead and have been quarantined by the plant to prevent the spread of disease. (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz/,Timothy Hobbs CC BY-SA 4.0})}
@end float

@cindex discrete
@cindex tree

Near the beginning of this manual, I noted that the water surrounding the archipelago in @ref{LempisaariNaantaliFinland} is not a @b{@i{true}} graph because the vertexes and edges are not distinct. The rose bush in @ref{rose} is a @b{@i{true}} tree in the mathematical sense. The vertexes and edges are very distinct. In the language of mathematics one would say that they are @emph{discrete}. This discreteness plays a @emph{very} important role in the reason why plants are geometrically tree-like.

The ability for the plant to treat leaves and branches as dispensable is dependent on its treatment of these leaves and their associated branches as discrete entities. When a person gets a deep gash in their finger, the wound will take months to heal, their finger will never be "like new" and the risk of fatal sepsis(blood poisoning) is severe. But you can tear a leaf on a plant to shreds and the plant will sabotage the leaf and grow a perfect new one in a fraction of the time it took the human to do a poor repair job. Furthermore, if an infection does occur in the leaf, and that infection begins to spread, the plant can choose a vertex bellow the infection point and sabotage an entire branch, as is illustrated in @ref{rose}.

Height is also an important reason why plants evolved to be tree-like and it might be even more important than the property of dispensability. Take a look at this cactus and tell me that it isn't bloby.

@float Figure, cactus
@image{./images/cactus,,200pt,A bloby Golden Barrel Cactus (echinocactus grusonii)@comma{} Koko Crater Botanical Garden@comma{} Oahu Hawaii,jpg}
@caption{A bloby Golden Barrel Cactus (echinocactus grusonii)@comma{} Koko Crater Botanical Garden@comma{} Oahu Hawaii (Copyright @copyright{} 20O9 @url{https://www.flickr.com/photos/33590535@@N06/3595297276/,Drew Avery CC BY 2.0})}
@end float

The cactus needs to fight water loss and therefore tries to be spherical in order to minimize surface area. It deals with the lack of dispensability of its leaves by protecting itself with spikes having a thick skin. Its need for quarantinability is lessened by the fact that in dry climates infections are less likely. Its need to be tall is limited as there are few neighboring plants to compete with in the desert. Many cacti, rather than being a perfect spheres, are somewhat elongated in order to regain at least some of that lost hight advantage, however, this one is not.

Now compare that cactus to the trees in this forest, where height competition is at its peek. The trees have grown very tall, and certainly have branches in order to reach out into whatever ray of sunlight the can find.

@float Figure, forest
@image{./images/forest,,200pt,A forest trail in H. Dutlinger Natural Area,jpg}
@caption{A forest trail in H. Dutlinger Natural Area (Copyright @copyright{} 2013 @url{https://www.flickr.com/photos/nicholas_t/9660892548,Nicholas A. Tonelli CC BY 2.0})}
@end float

One thing I notice when I look at these trees though, is that they are less tree-like than the rose bush, both geometrically  and in terms of graph-theory. Everything seems to come out of one central trunk and the sub-branches are not nearly as distinct. I have rarely seen a pine tree quarantine a sub-branch. They choose to drop entire branches instead. This lack of discreteness can probably be traced to the fact that few animals can reach up high enough to graze on the needles, and the tough needles are hardly worth eating anyways. The trees have found an alternative to discreteness and dispensability for their survival.

@node 1.5,1.6,1.4,Top
@section The Biological Graph

Plants are topologically relatively simple. The upper parts of plants are essentially never toroidal except in cases of human intervention.

@float Figure, tree-shaping
@image{./images/tree-shaping,,200pt,This is not natural.,jpg}
@caption{This is not natural. (Copyright @copyright{} 2009 @url{https://en.wikipedia.org/wiki/Tree_shaping#/media/File:Person-tree.jpg,Becky Northey@comma{} Pooktre CC BY 3.0})}
@end float

@float Figure, inosculation
@image{./images/inosculation,,200pt,Inosculation or cojoining is when two different trees join together. It is uncommon.,jpg}
@caption{This is uncommon. It is called @url{https://en.wikipedia.org/wiki/Inosculation,inosculation} or cojoining. In this picture two different trees have naturally joined together by getting really close and rubbing against eachother. (Copyright @copyright{} 2009 @url{https://en.wikipedia.org/wiki/Inosculation#/media/File:Acer_pseudoplatanus_exhibiting_inosculation.JPG,Roger Griffith CC0 Public Domain})}
@end float

The roots, however, may be toroidal and graph-like.

@float Figure, roots
@image{./images/roots,,200pt,This tree's roots have grown together into a toroidal graph-like structure,jpg}
@caption{This tree's roots have grown together (self grafted in the terminology of botinists) into a toroidal graph-like structure (Copyright @copyright{} @url{http://www.publicdomainpictures.net/view-image.php?image=66632&picture=roots,Lisa McCarty CC0 1.0 Public Domain})}
@end float

@cindex path redundancy
@cindex redundancy
Why would roots be toroidal and graph-like when above ground branches are not? I would posit that roots are less dispensable and less replaceable than branches and leaves. Roots probably contain more nutrients and are probably harder to grow. More importantly, when a branch dies and falls off, it falls to the ground, getting out of the way. And even if it doesn't fall to the ground, there is usually quite a lot of empty air-space around the plant for the plant to grow a new branch into. The ground has less space in it, and the old dead root is likely to get in the way. So it is important to plants that parts of their root system don't become disconnected from the rest of the plant by way of being cut. If I cut a branch of a tree then all of the sub-branches and leaves attached to that branch become disconnected from the rest of the tree. If I cut a root, which is connected to other roots in a toroidal and graph-like fashion, the tree may lose one pathway to get nutrients in and out of that section of it's root system, however it won't lose all of its pathways. In network theory and graph theory this property of graphs is called @emph{path redundancy} and is a fundamental mathematical advantage to graph-like systems and structures. It is also a slight disadvantage over the tree, as quarantining a diseased root requires blocking off multiple pathways, where-as the quarantining of a diseased branch requires blocking off only one edge-vertex connection.

@float Figure, roots-tree
@image{./images/roots-tree,,200pt,A tree with tree-like roots.,png}
@caption{A tree with tree-like roots. (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz/,Timothy Hobbs CC BY-SA 4.0})}
@end float

@float Figure, roots-tree-cut
@image{./images/roots-tree-cut,,200pt,If the base of tree2 section of the tree's roots is cut. Then the tree loses its connection to the water supply.,png}
@caption{It only takes cutting a tiny section of root for the tree to lose its connection to the water supply. (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz/,Timothy Hobbs CC BY-SA 4.0})}
@end float

@float Figure, roots-graph
@image{./images/roots-graph,,200pt,Here, there is path redundancy between the roots that reached water and the tree.,png}
@caption{If the roots connect to each-other to form a graph-like structure then there is path redundancy between the roots that reached water and the tree. (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz/,Timothy Hobbs CC BY-SA 4.0})}
@end float

@float Figure, roots-graph-cut
@image{./images/roots-graph-cut,,200pt,You have to cut more than one section of root in order to break the trees connection to water.,png}
@caption{You have to cut more than one section of root in order to break the trees connection to water. (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz/,Timothy Hobbs CC BY-SA 4.0})}
@end float


These structures are not, however, true graphs, as discrete vertexes and edges cannot be easily identified.

@subsection Truly Graph Based Systems in Nature

Beyond self grafting for the purposes of redundancy, relatively recent research has shown that trees also transfer nutrients and communicate with each-other through their roots. This lecture by tree ecologist Suzanne Simard is enlightening to the lay-person:

@float Figure, simard
@url{https://www.ted.com/talks/suzanne_simard_how_trees_talk_to_each_other,@image{./images/simard,,200pt,TED talk about the mycorrhizal networks which connect trees. <@url{https://www.ted.com/talks/suzanne_simard_how_trees_talk_to_each_other}>,png}}
@caption{TED talk about the mycorrhizal networks which connect trees. <@url{https://www.ted.com/talks/suzanne_simard_how_trees_talk_to_each_other}> (Copyright @copyright{} 2O16 @url{https://www.ted.com/talks/suzanne_simard_how_trees_talk_to_each_other,Suzanne Simard CC BY-NC-ND 3.0})}
@end float


In these networks trees transfer nutrients and potentially hormonal information(not yet proven) via fungi which connect to their roots.

@float Figure, fungi
@image{./images/fungi,,150pt,The tree on the left gets water from the tree on the right via the fungi network connecting the trees.,png}
@caption{The tree on the left gets water from the tree on the right via the fungi network connecting the trees. (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz/,Timothy Hobbs CC BY-SA 4.0})}
@end float

@float Figure, fungi-graph
@image{./images/fungi-graph,,200pt,The relationships between the trees in the forest can be seen as a kind of graph.,png}
@caption{The relationships between the trees in the forest can be seen as a kind of graph. (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz,Timothy Hobbs CC BY-SA 4.0})}
@end float

 Like molecules, which I described as being an amorphous blob of electroniness with nuclii stuck in the middle, in these graphs of trees, it is much easier to distinguish the vertexes than the edges. I would say that the vertexes are discrete but that I'm not so sure about the edges.

@float Figure, fungi-ether
@image{./images/fungi-ether,,200pt,The relationships can also be seen as being less destinct, as a kind of fungi ether with which the trees interface,png}
@caption{The relationships can also be seen as being less distinct, as a kind of fungi ether with which the trees interface (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz,Timothy Hobbs CC BY-SA 4.0})}
@end float

The extent to which the edges of the mycorrhizal networks are discrete can be argued either way. One argument against discreteness is that there are species of plant which survive solely on the nutrients that they suck from the network. Loafers basically. If the networks edges were discrete, then one would think that the trees would be able to cut off their connections to the loafers and that it would be in their evolutionary advantage to do so. This though, is not a very strong argument against discreteness. The wires of the internet or the phone system are very much discrete, but these wires too can be tapped and there is no way to block the wire taping without cutting off the connection entirely. An argument for discreteness is that the older trees in the network have been shown to grow roots specifically in order to strengthen their bonds with their own kin/children. Rather than to say that the edges are discrete or not discrete I think that it is best to say that they are sort of discrete. For more info see: @cite{Selosse, Marc-Andr√© et al., Mycorrhizal networks: des liaisons dangereuses? Trends in Ecology & Evolution , Volume 21 , Issue 11 , 621 - 628 <@url{http://isyeb.mnhn.fr/IMG/pdf/selosse2006tree.pdf}>}.

Regardless the degree of edge discreteness in Mycorrhizal networks, this kind of nutrient transfer is vital to the forests survival. When a young tree is growing up, its branches are not yet tall enough to reach the sun. Without this "nutrient communism" it would be impossible for trees in forests to reproduce, because the young trees would all be shaded out and die of "starvation". It has also been shown that this tree communism helps forests survive droughts. Trees which are near water send water through the root network to other trees which are thirsty. From each according to their means, to each, according to their needs.

And now things get really exciting.

@float Figure, brain
@image{./images/brain,,200pt,This is a graph!,jpg}
@caption{This is a graph! (Copyright @copyright{} 1894-1895 @url{https://commons.wikimedia.org/wiki/File:PSM_V46_D167_Outer_surface_of_the_human_brain.jpg,Unknown Public Domain})}
@end float

The nervous system is a graph. When I say that I don't just mean the human brain, I'm referring to all multi-neuron nervous systems.

@float Figure, neurons
@image{./images/neurons,,200pt,Neurons connect to each-other via discrete edges called dendrons as drawn.,jpg}
@caption{Neurons connect to each-other via discrete edges called dendrons as drawn. (Copyright @copyright{} 2009 @url{https://en.wikipedia.org/wiki/Neuron#/media/File:Chemical_synapse_schema_cropped.jpg,US National Institutes of Health Public Domain})}
@end float

Nervous systems are made up of neurons. These are cells like any other. They have a nucleus, a cell wall, and some fluid inside with lots of other stuff that isn't important to this work. They are funnily shaped however. They certainly aren't bloby like this amoeba.

@float Figure, amoeba
@image{./images/amoeba,,200pt,This amoeba is a bloby single celled organism.,jpg}
@caption{A photograph of an amoeba, which is a bloby single celled organism. (Copyright @copyright{} 1907 @url{https://commons.wikimedia.org/wiki/File:PSM_V71_D368_Amoeba_coli_highly_magnified.png,Unknown Public Domain})}
@end float

Neurons are more like blobs with tree-like appendages. However, when we look at a graph of neurons we can clearly identify the neuron cell nuclei as being the vertexes and the dendrons (their tree-like appendages) as being the edges! While the molecule and the communist tree-root network have amorphous edges and discrete vertexes both the edges and the vertexes of the nervous system are @emph{almost} fully discrete.

@float Figure, neuron-photo
@image{./images/neuron-photo,,200pt,A photograph of a pyramidal neuron in the hippocampus,jpg}
@caption{A photograph of a pyramidal neuron in the hippocampus (Copyright @copyright{} 2005 @url{https://commons.wikimedia.org/wiki/File:Pyramidal_hippocampal_neuron_40x.jpg,MethoxyRoxy CC BY-SA 2.5})}
@end float

The nervous system is the closes thing to a fully discrete graph that exists in the natural world. It is no coincidence, that the graphiest structure that exists also has the most interesting behavior. In the next chapter I will discuss graph based systems, how they differ from mere structures, and also some of their properties and classification. In the mean time, lets review some of the concepts that we learned in this chapter.

@node 1.6,Chapter 2,1.5,Top
@section Glossary

@enumerate
@cindex graph
@item @b{graph:}
A network of vertexes which are connected by edges.
@cindex vertex
@item @b{vertex:}
A point or object in a graph which may be connected to other vertexes.
@cindex edge
@item @b{edge:}
A connection between one or more vertexes in a graph.
@cindex torus
@item @b{torus:}
A donut shaped object
@cindex toroid
@item @b{toroid:}
An object with a hole through it.
@cindex n-toroid
@item @b{n-toroid:}
An object with n holes through it.
@cindex tree
@item @b{tree:}
A type of graphs without loops.
@cindex loop
@item @b{loop:}
A feature of a graph that the edges are connected together in such a way that you can find a path from a vertex back to that vertex without crossing the same edge twice.
@cindex graph-like
@item @b{graph-like:}
An object who's shape reminds me of a graph.
@cindex tree-like
@item @b{tree-like:}
An object who's shape reminds me of a tree (in the mathematical sense).
@cindex path
@item @b{path:}
The list of edges one has to go down in order to get from one vertex to another.
@cindex path redundancy
@item @b{path redundancy:}
When there are multiple paths between one vertex and another.
@cindex discrete
@item @b{discrete}
The parts of an object are discrete when the boundaries between them are clearly defined.
@cindex continuous
@item @b{continuous}
The parts of an object are continuous when no clear and precise boundaries can be drawn between them.
@cindex ablation
@item @b{ablation}
When a part of an object is removed, rubbed, scraped, washed away.
@cindex growth
@item @b{growth}
When the outside of an object gets bigger over time by way of new material being added.
@end enumerate

@node Chapter 2,1.6,Chapter 3,Top
@chapter The System

@float Figure, solar-system
@image{./images/solar-system,,300pt,The solar system is a system,jpg}
@caption{The solar system is a system (Copyright @copyright{} 1972 @url{https://commons.wikimedia.org/wiki/Category:Rick_Guidice#/media/File:Solar_system_artwork.jpg,Rick Guidice - NASA Public Domain})}
@end float

In the previous chapter I tried to catalog structures that reminded me of graphs. Unfortunately, most structures that I was able to find were not actually that graph-like. The problem, is that graphs represent collections of discrete things and solid objects do not have discrete parts, at least not at the macro-level. For non-biological structures, I had to zoom into the nano-level and look at the molecules and atoms themselves to find any sort of structural discreteness. And on the biological side, I am able to see discreteness at the cellular level, seeing the nervous system as a discrete graph-like structure where each neuron is a discrete entity connected in a graph-like structure. I also identified another kind of discreteness, in the rose depicted in @ref{rose}, behavioral discreteness. In the spring and summer, the branches of the rose all look green, and appear to be a continuous whole. However, come winter, some branches turn brown and die, while others remain green. Different parts of the rose behave differently. 

@page
@section Black box thought experiments
@cindex system
@cindex behavior

Imagine a box with two holes, one marked in and one marked out. Strange sounds and flashes of light are coming out of the out hole. But there seems to be a pattern. You watch for a while, you don't understand what is going on, but your brain tells you that there is some sense to it, that these sounds and lights are not random. Then you try throwing an old shoe into the in hole and the sounds and the flashes of light change.

@float Figure, system
@image{./images/system,,150pt,A system expresses a behavior and that behavior changes when you interact with the system,png}
@caption{A system expresses a @emph{behavior} and that behavior changes when you interact with the system (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz/,Timothy Hobbs CC BY-SA 4.0})}
@end float

This box is a @emph{system}. For the purpose of this work a system is any "thing" which:

@enumerate
@item has a non-random behavior
@item the behavior changes when you poke it or otherwise interact with it
@end enumerate

@cindex function
This model of a system should remind you of a function from mathematics.

@float Figure, function
@image{./images/function,,150pt,A function takes a set of arguments and produces a value,png}
@caption{A function takes a set of arguments and produces a value (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz/,Timothy Hobbs CC BY-SA 4.0})}
@end float

Indeed, if we were to have a system with no in-hole, then it is pretty easy to imagine how to represent it as a function @code{f(time)}.

@float Figure, simple-system
@image{./images/simple-system,,100pt,A supernova a million light years away expresses a behavior. This is a system, but we cannot interact with it.,png}
@caption{A supernova a million light years away expresses a behavior. This is a system which can be modeled without our needing to take observer interaction into account. (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz/,Timothy Hobbs CC BY-SA 4.0})}
@end float

But when I add an in-hole, the function becomes much more difficult to meaningfully define. When I'm programming, I often imagine my applications to be systems. They express behaviors, such as displaying windows, and I can interact with them using a mouse or keyboard. If I want to test my applications, I think of them as a function like @code{f(timespan,list-of-things-thrown-into-in-hole-during-timespan)}. Then I ask myself @code{golden-file == f(timespan,list-of-things-thrown-into-in-hole-during-timespan)?}. This works well for testing my own applications, when I know what kind of behavior I want. However, it is of no use to me when trying to figure out how a system works or in trying to discern patterns in its behavior and reactions. When I try to figure out what an undocumented program does, I launch the program and begin to interact with it. I look at the screen and see what the program shows or tells me, I click on things, I type on the keyboard, but I don't click and type at random. I do so in reaction to the things that I see on the screen. For example, if I see a button in the top left corner and I want to know what the button does, I move my mouse over and click on it to see what happens. I don't just click at a random location on the screen.

When I look at this process of a user interacting with an application, it isn't terribly clear which party is the observer and which is the system that is being observed. The application produces a behavior (content displayed on the screen, audio, ect.), and that behavior changes based on the user's input. But the user ALSO produces a behavior (mouse movements, keypresses) and that changes based on the application's output. So both the application AND the user are systems from the standpoint of being black boxes with in-holes and out-holes and some logic or pattern to their behavior.

@float Figure, system-observer
@image{./images/system-observer,,150pt,The system observer paradox,png}
@caption{The system observer paradox: which party is the observer and which is the system? (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz,Timothy Hobbs CC BY-SA 4.0})}
@end float

@float Figure, system-observer-graph
@image{./images/system-observer-graph,,150pt,We can look at this system-observer relationship as a tiny graph with two vertexes and two directional edges.,png}
@caption{We can look at this system-observer relationship as a tiny graph with two vertexes and two directional edges. (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz/,Timothy Hobbs CC BY-SA 4.0})}
@end float

And that graph is really a system in its own right. It has a behavior and it can be interacted with. For example, if I am debugging an application by interacting with it and there is music playing in my headphones, then I might start tapping my foot the music. This could change the way I interact with the application. If the music is streaming from my computer, it could also effect the application as well, by diverting the computers resources to the task of streaming the audio. So I can see the process of me debugging an application as a system with two parts; me and the application.

@float Figure, parts
@image{./images/parts,,200pt,It makes sense to view our system-observer graph as being a two part system.,png}
@caption{It makes sense to view our system-observer graph as being a two part system. (Copyright @copyright{} 2016 @url{http://timothy.hobbs.cz/,Timothy Hobbs CC BY-SA 4.0})}
@end float

@section Types of systems

A function in mathematics takes a set of arguments and produces a result. For any given set of arguments passed to the function, the result is @b{always} the same. It has been posited that a system can be viewed as a function 

@enumerate
@item Existence

A system, such as the solar system, actually exists. We can imagine a fake solar system that doesn't exist, and that fake solar system wouldn't exist. So existence is a property of a system. However, functions neither exist nor don't exist. They are purely theoretical constructs.

@item Independence

Systems often exhibit a behavior without anyone interacting with them. In the solar system, the earth continues to orbit the sun even though no one is interacting with the solar system in any meaningful way.

@item Statefulness

Two identical interactions with the same system happening at different times often lead to different behaviors/changes in behavior. So that famous quote "the definition of insanity is doing the same thing over and over and expecting different results"(Unknown author) does not apply for systems.

@end enumerate

@cindex Hume's problem of induction
@cindex apriori
Examining systems as boxes, it is very hard to understand what is going on inside. Some system's behaviors are predictable based on statistical methods alone, or by creating mathematical models for their function. The classic example of "black box predictability" is pre-heliocentric astronomy. Astronomers were able to predict the movements of the stars and the occurrence of eclipses, despite not being able to go in a space ship and look at the solar system from an angle which would enlighten them to the true nature of the solar system. They were wrong about what was in the box, but they were right about what was coming out of it. There is an entire branch of philosophy devoted to the "knowing what is in the box" problem, inspired by the fact that we can only observe behaviors with our "five senses" and therefore we can never really "look inside the box". If you want to learn more, you can look up "Hume's Problem of Induction". However, by examining the mathematical structure of various possible systems, we can determine some things about the potential insides of the box @emph{apriori}.  @emph{Apriori} means without experience, or in our case, without ever looking inside the box at all. Basically, we can postulate that the box contains a certain mechanism, and then ask ourselves, "does that mechanism make sense?" If the mechanism that we are imagining doesn't work in theory then it cannot possibly exist in real life (we hope).


Behaviors that Turing completeness either does not guarantee or that Turing machines cannot express:
@enumerate
@item Concurrency
@item Continuity of time and quantity
@item Instantaneousness
@end enumerate

@enumerate
@item State change
@item Structural/shape change
@item Harmonic residue
@end enumerate

@node Chapter 3
@chapter Artificial Graph-like Structures and Systems
@section Roads and Paths
http://www.patternlanguage.com/archive/cityisnotatree.html
http://library.uniteddiversity.coop/Ecological_Building/A_Pattern_Language.pdf
@section Water-systems
@section Fabrics and other Materials
@section 

@node Chapter 4
@chapter Graphs in Computer Software
@section The ultimate data-type
@section Ted Nelson's big dream

@node Chapter 5
@chapter The Artist and the Engineer
@section Types of art and their history
@subsection Pre-photograph art
@subsection Post-photograph art
Artists have taken nature, and specifically the human form, as their muse since time immemorial.

--



Photo of lady.



The purpose of copying.
@enumerate
@item Preservation of an items attribute
@item Utilitarian need for multiple copies
@item Eugenics
The first person to have their brain scanned into a computer capable of simulating it will be a white man. Some say it will be a selfie.
@end enumerate

@node Chapter 6
@chapter The textgraph Ecosystem

"Designing Software for Ease of Extension and Contraction" http://www.cs.umd.edu/class/spring2003/cmsc838p/Design/family.pdf

When I have tried to explain my textgraph project, I have often been confronted by objections, raised by listeners who criticized my project prematurely, without fully understanding textgraph. Invalid objections have included:

@enumerate
@item You cannot check visual information into git
@item You cannot build complex graphs, the visual information will be confusing and incomprehensible
@item Editing visual information is a pain, working with text is much easier
@end enumerate

These are problems which are all solved by using the textgraph ecosystem.

@section The tg file format
@section mge: The Myopic Graph Editor
@section Filtering and querying graphs
@section tg2dot: Drawing graphs with graphviz
@section tgtemplate: Generating text
@section tgflow: Generating code
@subsection pycfg: Generating Python control flow graphs
@subsection pydfg: Generating Python data flow graphs
@section tgserve: Remote, interactive and infinite graphs
@float Figure, quilt
@image{./images/quilt,,200pt,A quilt is made up of patches and can extend to infinity.,jpg}
@caption{A quilt is made up of patches and can extend to infinity. (Copyright @copyright{} 2009 @url{http://lilywyte.deviantart.com/art/Crazy-Quilt-Patches-109044964,Morgan Mayfair  CC BY 3.0})}
@end float
@section Dynamically structured graphs
@unnumbered Index
@printindex cp
@bye
