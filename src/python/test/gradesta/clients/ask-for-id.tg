[0, "#!/usr/bin/python3\n# This is a test client which asks for a bunch of client IDs", [["^#", 1], ["", 2], ["", 49], ["", 78], ["!^pycfg", 4]]]
[1, "License: AGPL >= 3\nCopyright (c) 2017 Timothy Hobbs\n\nThis file is part of Gradesta.\n\nGradesta is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program. If not, see <http://www.gnu.org/licenses/>.", []]
[2, "#imports\nimport sys\nimport argparse\nimport os\nimport zmq\nimport gradesta_pb2", []]
[32, "bind_sockets args |\nzmq_context = zmq.Context()\nsock = zmq_context.socket(zmq.REQ)\npath = \"ipc://\"+os.path.join(os.getcwd(),\"manager.gradesock\")\nprint(path)\nsock.connect(path)", [["; sock |", 119]]]
[4, "parse_cli_args\nparser = argparse.ArgumentParser(description=\"\"\"ask-for-ids asks for client ids from the manager\"\"\",formatter_class=argparse.RawTextHelpFormatter)\nargs = parser.parse_args()", [["; args|", 32]]]
[78, "#classes", []]
[49, "#functions", []]
[119, "ask_for_ids\nid_prefixes = [\"foo\",\"bar\",\"baz\",\"foo\",\"foo\",\"bar\"]\nidpi = iter(id_prefixes)", [["; idpi |", 120]]]
[120, "next_id idpi |\nidp = next(idpi)", [["end;", 121], ["; idpi | idp", 123]]]
[121, "done\nprint(\"Done.\")", []]
[123, "ask_for_id sock | idp\nreq = gradesta_pb2.RequestToManager()\nidreq = gradesta_pb2.RequestId()\nidreq.prefix = idp\nreq.request_id.extend([idreq])\nreqb = req.SerializeToString()\nprint(\"Sending request to manager. Id prefix = %s\"%idp)\nsock.send(reqb)\nrfm = gradesta_pb2.ReplyFromManager()\nprint(\"Waiting for reply from manager.\")\nrfm.ParseFromString(sock.recv())\nfor id in rfm.assigned_id:\n print(id.client_id)", [["; sock |", 120]]]
