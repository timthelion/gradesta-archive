#!/usr/bin/python3
from textgraph import *
import sys
import argparse
import json
parser = argparse.ArgumentParser(description='Print textgraph as text by concatinating square contents.')
parser.add_argument('files', metavar='FILE', nargs='+', help='files to concatinate')
parser.add_argument('--comment-prefix', dest='commentPrefix', default=None, help='What prefix should we use to add squareId comments to each line of code?')
parser.add_argument('--prepend-street-names', dest='indent', action='store_const',const=True, default=False, help='Automatically indent output by prepending street names?')
args = parser.parse_args()
indentation = ""
for file in args.files:
  tg = TextGraph(file)
  def printSquares(square,indentation):
    squareIdComment = ""
    if not args.commentPrefix is None:
      squareIdComment = args.commentPrefix + " â–¡:"+str(square)
    if not args.indent:
      print(tg[square].text + squareIdComment)
    else:
      print(indentation+tg[square].text.replace("\n",squareIdComment+"\n"+indentation)+squareIdComment)
    for street in tg[square].streets:
      printSquares(street.destination,indentation+json.loads('"' + street.name + '"'))
  printSquares(0,"")
